"""
Django settings for ip_lookup_project project.

Generated by 'django-admin startproject' using Django 4.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from celery.schedules import crontab


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$^h#z-x6%r^cm6&#%h**-9n$jysh8fi3bmggyy7pv!3oz%1ut*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # 仅测试环境使用，生产环境需要配置具体域名
CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000']  # 允许前端访问 API

LOGIN_URL = "/login/"
LOGOUT_REDIRECT_URL = "/login/"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ip_lookup_project',
    'ip_lookup_app',
    'rest_framework',
    'drf_yasg',
    'django_extensions',
]

MIDDLEWARE = [
    'ip_lookup_project.disable_trace_track.disable_trace_track_middleware',
    'ip_lookup_project.firewall.ip_whitelist_middleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ip_lookup_project.urls'

# Celery配置
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# Celery 定时任务（需要配合 Celery Beat）
CELERY_BEAT_SCHEDULE = {
    'sync_aws_data': {
        'task': 'ip_lookup_app.tasks.sync_aws_data',
        'schedule': crontab(hour=17, minute=30),
    },
    # "sync_aws_route53_data": {
    #     "task": "ip_lookup_app.tasks.sync_aws_route53_data",
    #     "schedule": crontab(hour=17, minute=32),  # 每天 17:32 运行
    # },
}


# 模板和静态文件配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

WSGI_APPLICATION = 'ip_lookup_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
#DATABASE_ROUTERS = ['ip_lookup_app.routers.DatabaseRouter']

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'aws_ip_dou',
        'USER': 'root',
        'PASSWORD': 'cisco123',
        'HOST': '10.36.120.110',
        'PORT': '3306',
        "ATOMIC_REQUESTS": True,
        'OPTIONS': {
            'isolation_level': 'read committed',  # 调整隔离级别
        },
    },
    'azure': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'azure_ip_dou',
        'USER': 'root',
        'PASSWORD': 'cisco123',
        'HOST': '10.36.120.110',
        'PORT': '3306',
        "ATOMIC_REQUESTS": True,
        'OPTIONS': {
            'isolation_level': 'read committed',  # 调整隔离级别
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# settings.py
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'django.log',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
}


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )
}
